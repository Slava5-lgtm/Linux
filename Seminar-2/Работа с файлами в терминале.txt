                                                Что такое оболочка?
Начнём с важного вопроса: что же такое на самом деле “оболочка” и зачем она нужна. Оболочка (shell) – это
промежуточное звено между пользователем и операционной системой, основное назначение – интерпретация команд
и передача результатов их выполнения пользователю. Мы вводим команды в оболочке и ОС их выполняет,
возвращая некий результат. Так как мы работаем в текстовом интерфейсе, то команды и их результат также
являются текстом.
В нашей системе Linux чаще всего встречается оболочка bash (Bourne again shell), хотя существуют и другие:
zsh, sh и т.д. Bash это продвинутая версия классической оболочки sh (Bourne shell), которая использовалась
еще в UNIX-системах с 1977 года.
Зная особенности работы с bash, мы сможем эффективно решать задачи в любой Linux-системе. Перейдём к
практике.

                                                Приглашение оболочки (bash)
Первое, что мы видим в терминале после логина – приглашение оболочки bash. Стандартная настройка в Ubuntu
включает в себя следующие элементы:
● логин (имя) пользователя;
● хост (имя компьютера);
● текущий каталог (~ – это домашняя директория);
● указатель типа пользователя (обычный – $ или root – # (супер пользователь(# - имеет не огрониченые
    права))).

            имя пользователя        имя компьютера      текущий каталог     тип пользователя
                    db         @      linux-host:              ~                    $

Все эти элементы важны при работе в системе. Мы понимаем, от имени какого пользователя будет выполнена
команда, на какой системе мы работаем, какой текущий каталог и являемся мы администратором или нет. Формат
приглашения bash можно настроить для себя индивидуально, например, включить дополнительные элементы или
функциональность.

                                                Файловая система

Файлы -> Другие места -> комп (файловая система Линукс - КОРЕНЬ)
Оболчка bash это и есть терминал
Домашняя папка -> показать скрытые файлы -> .bashhrc  -> 
60 строка было так (PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ')
в терминале (db@db-linux:~$ )
поменял на это
(PS1='\[\033[01;34m\]┏━ \[\033[01;32m\]\u \[\033[00m\]: \[\033[01;34m\]\w\n┗━ \[\033[00m\]')
в терминале (db:~ с новой строкт >)
строка 92 было alias ll='ls -alF' исправили на alias ll='ls -AlFh' - чтобы выводил анойды

.bashrc  ->    строки 95 небыло создали написали alias upd='sudo apt update ; sudo apt upgrade -y'
sudo apt update (обновить список пакетов) sudo apt upgrade -y (чтобы не запрашивал пароль). Команду убрали

                                                Работа с файлами: ls, pwd, cd, mkdir, cp, rm, mv, touch, cat
Давайте определим, где мы находимся в иерархии файлов. Для этого отлично подходит команда pwd, сокращенно
print working directory. Многие команды в Linux составлены из сокращений слов, так их легче запомнить и
быстрее набирать. Кстати, если встречаете короткую команду (две или три буквы), скорее всего это важная и
часто используемая утилита, её стоит запомнить.

                                                ls — список файлов

Вторая полезная команда – ls, сокращенное list. ls позволяет показать список файлов в директории. Формат
вывода может быть разным. Самые популярные параметры это -l, длинный вывод списка и -а – показ всех
элементов, включая скрытые файлы (название которых начинается с точки). Эти параметры можно объединять:
ls -al.

db@gb-linux:~$ cd /run          -   переходим в каталог run
db@gb-linux:/run$ ls            -   смотрим список файлов
db@gb-linux:/run$ ls -a         -   смотрим список файлов с короткими параметроми
db@gb-linux:/run$ ls -al        -   смотрим список файлов длином подробном формате