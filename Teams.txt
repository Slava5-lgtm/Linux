git version - версия программы
git init - инициализация репозитория
git status - что твориться в репозитории 
git add - сохранения файла (имя файла)
git add **.txt - сохраняет все файлы с одним расширением
git commit -m - комментарии добавляется через ("")
git log - история репозитория
git log --graph - увидим график (ветку развития)
git log --stat - подробное изменения в файле
cls - очистка терминала
git branch (имя ветки) - создания новой ветки
git branch --list - показывает сколько веток  (имя ветки) - переключения между ветками
git merge (имя ветки) - подтягивать изменения из другой ветки
git clone (вставляем ссылку когда создавали репозиторий) – клонируем репозиторий
git pull – добавляем из удалённого репозитория
git push – добавляем из локального репозитория
папки bin - не добавляем из удалённого репозитория
папка obj - не добавляем из удалённого репозитория
dotnet new gitignore - Создаем в корневой папке гит игнор
Ctrl // или /* */ - виделит весь текст иэтой командой весь текст можно закоментировать
123

                                        ПЕРВЫЙ ПЕРЕНОС С ЛОКАЛЬНОГО РЕПОЗТОРИЯ В УДОЛЕНЫЙ

git branch -M main - переименовывает ветку master на локальном репозитории в main. Таким образом, изменения, произошедшие на удаленном репозитории больше не конфликтуют с локальным хранилищем, в котором главная ветка стала также называться main.
git remote add repository link - Вместо repository указывается название удаленного репозитория — оно может быть произвольным, т.к. используется только на локальной машине. Однако, чаще всего это просто origin.
                                  Вместо link указывается ссылка на удаленный репозиторий. Ее вид зависит от протокола доступа — это может быть как HTTPS, так и SSH
git push --set-upstream Linux main - вместо Linux имя удоленого репозитория

Когда репозиторий создан работаем только этой командой git push --set-upstream (имя удоленого репозитория) main